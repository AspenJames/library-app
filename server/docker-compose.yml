---
services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: api
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    command: '/api -p 80'
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: |
        wget --no-verbose --tries=1 \
        --spider http://localhost:8080/healthcheck || exit 1
      interval: 1s
      timeout: 5s
      retries: 10
  dev:
    build:
      context: .
      dockerfile: ./Dockerfile.local
    container_name: dev
    command: 'fiber dev'
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - "8080:8080"
    volumes:
      - ./:/usr/src/app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: |
        wget --no-verbose --tries=1 \
        --spider http://localhost:8080/healthcheck || exit 1
      interval: 1s
      timeout: 5s
      retries: 10
  db:
    image: postgres:15.1-alpine
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  db:
